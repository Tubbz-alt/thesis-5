\chapter{Proofs about System~D}
\label{app:d}

\section{Auxiliary definitions}

\begin{definition}[Values]
Let values $[[v]]$ be defined by the following subgrammar of $[[t]]$:
\[
[[v]] \bnfeq [[H ts]] \bnfor [[PI d. t]] \bnfor [[\a:Rel k. t]] \bnfor [[\c:phi.t]]
\]
\end{definition}

\begin{definition}[Free variables]
Define $[[fv]]$ to be a function extracting free variables, overloaded to work
over types $[[t]]$, coercions $[[g]]$, propositions $[[phi]]$,
alternatives $[[alt]]$, and telescopes $[[D]]$. 
The non-standard equations are given here:
\begin{align*}
[[fv(H zs -> c. t) &= fv(t) \ {c, zs}]]\\[1ex]
[[fv(empty) &= \emptyset]]\\
[[fv(a:rel k,D) &= (fv(D) \ {a}) \union fv(k)]]\\
[[fv(c:phi,D) &= (fv(D) \ {c}) \union fv(phi)]]\\
\end{align*}
\end{definition}

\begin{definition}[Context extension]
Define the relation $[[G \subseteq G']]$ to mean that $[[G]]$ is a (not necessarily
contiguous) subsequence of $[[G']]$.
\end{definition}

\section{Structural properties}

\subsection{Relevant contexts}

\begin{lemma}[$[[dom]]$/$[[Rel]]$]
\label{lem:dom-rel}
$[[dom(Rel(G)) = dom(G)]]$
\end{lemma}

\begin{proof}
By its definition $[[Rel(G)]]$ binds the same variables as $[[G]]$.
\end{proof}

\begin{lemma}[Subsequence/$[[Rel]]$]
\label{lem:subsequence-rel}
If $[[G \subseteq G']]$ then $[[Rel(G) \subseteq Rel(G')]]$.
\end{lemma}

\begin{proof}
By the definitions of $\subseteq$ and $[[Rel]]$.
\end{proof}

\begin{lemma}[$[[Rel]]$ is idempotent]
\label{lem:rel-idempotent}
$[[Rel(Rel(G)) = Rel(G)]]$
\end{lemma}

\begin{proof}
By the definition of $[[Rel]]$.
\end{proof}

\begin{lemma}[Increasing relevance] ~
\label{lem:increasing-rel}
Let $[[G]]$ and $[[G']]$ be the same except that some bindings
in $[[G']]$ are labeled $[[Rel]]$ where those same bindings
in $[[G]]$ are labeled $[[Irrel]]$.
\begin{enumerate}
\item If $[[S;G |-ty t : k]]$, then $[[S;G' |-ty t : k]]$.
\item If $[[S;G |-co g : phi]]$, then $[[S;G' |-co g : phi]]$.
\item If $[[S;G |-prop phi]]$, then $[[S;G' |-prop phi]]$.
\item If $[[S;G;s0;t0 |-alt alt : k]]$, then $[[S;G';s0;t0 |-alt alt : k]]$.
\item If $[[S;G |-tel D]]$, then $[[S;G' |-tel D]]$.
\item If $[[S |-ctx G]]$, then $[[S |-ctx G']]$.
\item If $[[S;G |-s t --> t']]$, then $[[S;G' |-s t --> t']]$.
\end{enumerate}
\end{lemma}

\begin{proof}
By straightforward mutual induction, appealing to
\pref{lem:rel-idempotent}.
\end{proof}

\subsection{Regularity}

\begin{lemma}[Type variable kinds]
\label{lem:tyvar-reg}
If $[[S |-ctx G]]$ and $[[a :rel k \in G]]$, then there exists
$[[G']]$ such that $[[G' \subseteq Rel(G)]]$ and $[[S;G' |-ty k : Type]]$.
Furthermore, the size of the derivation of $[[S;G' |-ty k : Type]]$
is smaller than that of $[[S |-ctx G]]$.
\end{lemma}

\begin{proof}
Straightforward induction on $[[S |-ctx G]]$.
\end{proof}

\begin{lemma}[Coercion variable kinds]
\label{lem:covar-reg}
If $[[S |-ctx G]]$ and $[[c : phi \in G]]$, then there exists
$[[G']]$ such that $[[G' \subseteq Rel(G)]]$ and $[[S;G' |-prop phi]]$.
Furthermore, the size of the derivation of $[[S;G' |-prop phi]]$
is smaller than that of $[[S |-ctx G]]$.
\end{lemma}

\begin{proof}
Straightforward induction on $[[S |-ctx G]]$.
\end{proof}

\begin{lemma}[Context regularity]
\label{lem:ctx-reg}
If:
\begin{enumerate}
\item $[[S;G |-ty t : k]]$, OR
\item $[[S;G;s0;t0 |-alt alt : k]]$, OR
\item $[[S;G |-co g : phi]]$, OR
\item $[[S;G |-prop phi]]$, OR
\item $[[S;G |-tel D]]$, OR
\item $[[S |-ctx G]]$
\end{enumerate}
Then $[[S |-ctx prefix(G)]]$ and $[[|-sig S]]$, where $[[prefix(G)]]$ is an
arbitrary prefix of $[[G]]$. Furthermore, both resulting derivations are no
larger than the input derivations.
\end{lemma}

\begin{proof}
Straightforward mutual induction.
\end{proof}

\subsection{Weakening}

\begin{lemma}[Weakening]
\label{lem:weakening}
Assume $[[S |-ctx G']]$ and $[[G \subseteq G']]$.
\begin{enumerate}
\item If $[[S;G |-ty t : k ]]$ then $[[S;G' |-ty t : k]]$.
\item If $[[S;G |-co g : phi ]]$, then $[[S;G' |-co g : phi]]$.
\item If $[[S;G |-prop phi ]]$, then $[[S;G' |-prop phi]]$.
\item If $[[S;G;s0;t0 |-alt alt : k]]$, then $[[S;G';s0;t0 |-alt alt : k]]$.
\item If $[[S;G |-tel D]]$, then $[[S;G' |-tel D]]$.
\item If $[[S |-ctx G, D]]$, then $[[S |-ctx G', D]]$.
\item If $[[S;G |-s t --> t']]$, then $[[S;G' |-s t --> t']]$.
\end{enumerate}
\end{lemma}

\begin{proof}
By straightforward mutual induction, appealing to
\pref{lem:subsequence-rel}, \pref{lem:increasing-rel} (in order to
be able to use the induction hypothesis in, e.g., \rul{Ty\_AppIrrel}),
and
\pref{lem:ctx-reg}
(in order to use the induction hypothesis in, e.g., \rul{Ty\_Pi}).
\end{proof}

\subsection{Scoping}

\begin{lemma}[Closed primitive kinds]
\label{lem:closed-primitive-kinds}
If $[[P : k]]$, then $[[fv(k) = \emptyset]]$.
\end{lemma}

\begin{proof}
By inspection of $[[P : k]]$.
\end{proof}

\begin{lemma}[Scoping] ~
\label{lem:scoping}
\begin{enumerate}
\item If $[[S;G |-ty t : k]]$, then $[[fv(t) \subseteq {dom(G)}]]$ and 
$[[fv(k) \subseteq {dom(G)}]]$.
\item If $[[S;G |-co g : phi]]$, then $[[fv(g) \subseteq {dom(G)}]]$ and
$[[fv(phi) \subseteq {dom(G)}]]$.
\item If $[[S;G;s0;t0 |-alt H zs -> c. t : k]]$, 
  then $[[fv(H zs -> c. t) \subseteq {dom(G)}]]$.
\item If $[[S;G |-prop phi]]$, then $[[fv(phi) \subseteq {dom(G)}]]$.
\item If $[[S;G |-tel D]]$, then $[[fv(D) \subseteq {dom(G)}]]$.
\item If $[[|-sig S]]$ and $[[S |-tc H : k]]$, then $[[fv(k) = \emptyset]]$.
\end{enumerate}
\end{lemma}

\begin{proof}
By straightforward mutual induction on the structure of the terms (not the
derivations), appealing to \pref{lem:dom-rel}, \pref{lem:closed-primitive-kinds},
\pref{lem:tyvar-reg},
\pref{lem:covar-reg},
and \pref{lem:ctx-reg}. The
induction must be on the terms, not the derivation, so that the induction
hypothesis is general enough to make use of, e.g., \pref{lem:tyvar-reg}.
\end{proof}

\section{Determinacy}

\begin{lemma}[Uniqueness of signatures] ~
\label{lem:uniq-sig}
Assume $[[|-sig S]]$.
\begin{enumerate}
\item If $[[T:(as:ks1) \in S]]$ and $[[T:(as:ks2) \in S]]$, then $[[ks1 = ks2]]$.
\item If $[[K:(D1;T1) \in S]]$ and $[[K:(D2;T2) \in S]]$, then $[[D1 = D2]]$
and $[[T1 = T2]]$.
\end{enumerate}
\end{lemma}

\begin{proof}
By the freshness conditions on $[[|-sig S]]$.
\end{proof}

\begin{lemma}[Uniqueness of contexts] ~
\label{lem:uniq-ctx}
Assume $[[S |-ctx G]]$.
\begin{enumerate}
\item If $[[a :rel1 k1 \in G]]$ and $[[a :rel2 k2 \in G]]$,
then $[[rel1 = rel2]]$ and $[[k1 = k2]]$.
\item If $[[c:phi1 \in G]]$ and $[[c:phi2 \in G]]$,
then $[[phi1 = phi2]]$.
\end{enumerate}
\end{lemma}

\begin{proof}
By the freshness conditions on $[[S |-ctx G]]$.
\end{proof}

\begin{lemma}[Determinacy of type constants]
\label{lem:determinacy-tycon}
If $[[|-sig S]]$, $[[S |-tc H : k1]]$, and $[[S |-tc H : k2]]$, then $[[k1 = k2]]$.
\end{lemma}

\begin{proof}
From \pref{lem:uniq-ctx}.
\end{proof}

\begin{lemma}[Values do not step]
\label{lem:value-no-step}
There exists no $[[t]]$ such that $[[S;G |-s v --> t]]$.
\end{lemma}

\begin{proof}
By induction on the structure of $[[v]]$.
\end{proof}

\begin{lemma}[Determinacy] ~
\label{lem:determinacy}
\begin{enumerate}
\item If $[[S;G |-ty t : k1]]$ and $[[S;G |-ty t : k2]]$, then
$[[k1 = k2]]$.
\item If $[[S;G |-co g : phi1]]$ and $[[S;G |-ty g : phi2]]$, then
$[[phi1 = phi2]]$.
\item If $[[S;G |-s t --> s1]]$ and $[[S;G |-s t --> s2]]$, then
$[[s1 = s2]]$.
\end{enumerate}

\begin{proof}
By mutual induction, appealing to \pref{lem:uniq-ctx},
\pref{lem:determinacy-tycon} (which
requires a use of \pref{lem:ctx-reg} first), and
\pref{lem:value-no-step}.
\end{proof}

\section{Substitution}

\begin{lemma}[Value substitution]
\label{lem:value-subst}
If $[[v]]$ is a value with a free variable $[[a]]$,
then $[[v[s/a] ]]$ is also a value.
\end{lemma}

\begin{proof}
By the definition of values.
\end{proof}

\begin{lemma}[Substitution/erasure]
\label{lem:subst-erase}
$[[|t|[|s|/a] = |t[s/a]|]]$
\end{lemma}

\begin{proof}
By induction on the structure of $[[t]]$.
\end{proof}

\begin{lemma}[Type substitution]
\label{lem:ty-subst}
Assume $[[S;G |-ty s : k]]$.
\begin{enumerate}
\item If $[[S;G,a:rel k,G' |-ty t : k0]]$, then $[[S;G,G'[s/a] |-ty t[s/a] : k0[s/a] ]]$.
\item If $[[S;G,a:rel k,G' |-co g : phi]]$, then $[[S;G,G'[s/a] |-co g[s/a] : phi[s/a] ]]$.
\item If $[[S;G,a:rel k,G' |-prop phi]]$, then $[[S;G,G'[s/a] |-prop phi[s/a] ]]$.
\item If $[[S;G,a:rel k,G';s0;t0 |-alt alt : k]]$,
then $[[S;G,G'[s/a];s0[s/a];t0[s/a] |-alt alt[s/a] : k[s/a] ]]$.
\item If $[[S;G,a:rel k,G' |-tel D]]$, then $[[S;G,G'[s/a] |-tel D[s/a] ]]$.
\item If $[[S |-ctx G,a:rel k,G']]$, then $[[S |-ctx G,G'[s/a] ]]$.
\item If $[[S;G,a:rel k,G' |-s t --> t']]$, then $[[S;G,G'[s/a] |-s t[s/a] --> t'[s/a] ]]$.
\end{enumerate}
\end{lemma}

\begin{proof}
By mutual induction.
\begin{description}
\item[Case \rul{Ty\_Var}:] Here, we know $[[t]]$ is some variable $[[b]]$. There
are three cases to consider:
\begin{description}
\item[Case $[[b:Rel k0 \in G]]$:] We must derive $[[S;G,G'[s/a] |-ty b : k0[s/a] ]]$.
We will use \rul{Ty\_Var}. We establish $[[S |-ctx G,G'[s/a] ]]$ by the induction
hypothesis. Scoping (\pref{lem:scoping}) tells us that $[[a \notin fv(k0)]]$, and so we are
done by the fact that $[[b :Rel k0 \in G]]$.
\item[Case $[[b = a]]$:] By weakening (\pref{lem:weakening}).
\item[Case $[[b:Rel k0 \in G']]$:] Once again, we get $[[S |-ctx G,G'[s/a] ]]$ by the
induction hypothesis. Furthermore, we get $[[b:Rel k0[s/a] \in G'[s/a] ]]$ from 
$[[b:Rel k0 \in G']]$.
\end{description}
\item[Case \rul{Ty\_Con}:] By \pref{lem:scoping}.
\item[Case \rul{Co\_Var}:] Similar to \rul{Ty\_Var}.
\item[Other cases:] By the induction hypothesis, using \pref{lem:value-subst} for
certain step rules.
\end{description}
\end{proof}

\begin{lemma}[Coercion substitution]
\label{lem:co-subst}
Assume $[[S;G |-co g : phi]]$.
\begin{enumerate}
\item If $[[S;G,c:phi,G' |-ty t : k0]]$, then $[[S;G,G'[g/c] |-ty t[g/c] : k0[g/c] ]]$.
\item If $[[S;G,c:phi,G' |-co h : phi]]$, then $[[S;G,G'[g/c] |-co h[g/c] : phi[g/c] ]]$.
\item If $[[S;G,c:phi,G' |-prop phi]]$, then $[[S;G,G'[g/c] |-prop phi[g/c] ]]$.
\item If $[[S;G,c:phi,G';s0;t0 |-alt alt : k]]$,
then $[[S;G,G'[g/c];s0[g/c];t0[g/c] |-alt alt[g/c] : k[g/c] ]]$.
\item If $[[S;G,c:phi,G' |-tel D]]$, then $[[S;G,G'[g/c] |-tel D[g/c] ]]$.
\item If $[[S |-ctx G,c:phi,G']]$, then $[[S |-ctx G,G'[g/c] ]]$.
\item If $[[S;G,c:phi,G' |-s t --> t']]$, then $[[S;G,G'[g/c] |-s t[g/c] --> t'[g/c] ]]$.
\end{enumerate}
\end{lemma}

\begin{proof}
Similar to proof for \pref{lem:ty-subst}.
\end{proof}

\section{Consistency}

\begin{definition}[Erasure]
\label{defn:erasure}
Define the erasure of a type $[[ee = |t|]]$ by the following function (including
auxiliary functions):\\[1ex]
\ottfundefneraseXXtype{}
\ottfundefneraseXXbinder{}
\ottfundefneraseXXalt{}
\end{definition}

\begin{notation}[Erased types in consistency proof]
In all lemmas and proofs written from here until the completeness
of the rewrite relation (\pref{lem:complete-red}), all types
are assumed to be erased of coercions, according to
\pref{defn:erasure}.
\end{notation}

\begin{notation}[Elementwise reduction]
We write $[[ts ~> ts']]$ to mean $\forall [[i]], [[ti ~> ti']]$.
\end{notation}

%% \begin{lemma}[Consistency is reflexive]
%% \label{lem:cons-refl}
%% $[[t ! t]]$
%% \end{lemma}

%% \begin{proof}
%% Case analysis on the structure of $[[t]]$.
%% \end{proof}

%% \begin{lemma}[Consistency is symmetric]
%% \label{lem:cons-sym}
%% If $[[t1 ! t2]]$, then $[[t2 ! t1]]$.
%% \end{lemma}

%% \begin{proof}
%% Case analysis on $[[t1 ! t2]]$.
%% \end{proof}

\begin{lemma}[Parallel reduction substitution] ~
\label{lem:red-subst}
Assume $[[ss ~> ss']]$. We can then conclude:
\begin{enumerate}
\item $[[t[ss/zs] ~> t[ss'/zs] ]]$
\item $[[d[ss/zs] ~> d[ss'/zs] ]]$
\item $[[alt[ss/zs] ~> alt[ss'/zs] ]]$
\end{enumerate} 
\end{lemma}

\begin{proof}
By straightforward
mutual induction on the structure of $[[t]]$/$[[d]]$/$[[alt]]$.
%% \begin{description}
%% \item[Case $[[t = a]]$:] By assumption.
%% \item[Case $[[t = b]]$:] By \rul{R\_Refl}.
%% \item[Case $[[t = H]]$:] By \rul{R\_Refl}.
%% \item[Case $[[t = t1 t2]]$:] By induction and \rul{R\_App}.
%% \item[Case $[[t = PI d. s]]$:] By induction and \rul{R\_Pi}.
%% \item[Case $[[t = o]]$:] By \rul{R\_Refl}.
%% \item[Case $[[t = case_k s of alts]]$:] By induction and \rul{R\_Case}.
%% \item[Case $[[t = \d.s]]$:] By induction and \rul{R\_Lam}.
%% \item[Case $[[t = fix s]]$:] By induction and \rul{R\_Fix}.
%% \item[Case $[[d = a:rel k]]$:] By induction and \rul{R\_TyBinder}.
%% \item[Case $[[d = o]]$:] By \rul{R\_CoBinder}.
%% \item[Case $[[alt = p -> c.s]]$:] By induction and \rul{R\_Alt}.
%% \end{description}
\end{proof}

\begin{lemma}[Parallel reduction substitution in parallel]
\label{lem:red-subst-par}
If $[[t1 ~> t2]]$ and $[[ss ~> ss']]$, then
$[[t1[ss/zs] ~> t2[ss'/zs] ]]$.
\end{lemma}

\begin{proof}
By induction on $[[t1 ~> t2]]$.

\begin{description}
\item[Case \rul{R\_Refl}:] By \pref{lem:red-subst}.
\item[Congruence rules:] By induction.
\item[Case \rul{R\_Beta}:] It must be that $[[t1 = (\b:rel k1. t3) t4]]$
and $[[t2 = t3'[t4'/b] ]]$ where $[[t3 ~> t3']]$ and $[[t4 ~> t4']]$.
We must show that
$[[ (\b:rel k1[ss/zs]. t3[ss/zs]) t4[ss/zs] ~> t3'[t4'/b][ss'/zs] ]]$.
Proceeding by \rul{R\_Beta}, the left-hand-side steps to 
$[[ t5[t6/b] ]]$ where $[[t3[ss/zs] ~> t5]]$ and $[[t4[ss/zs] ~> t6]]$.
(We can choose $[[t5]]$ and $[[t6]]$.)
We must thus show that $[[t5[t6/b] = t3'[t4'/b][ss'/zs] ]]$.
First, we reorder substitutions to get
$[[t3'[t4'/b][ss'/zs] = t3'[ss'/zs][t4'[ss'/zs]/b] ]]$, noting
that $[[b # ss']]$ by the Barendregt convention.
Choose $[[t5 = t3'[ss'/zs] ]]$ and $[[t6 = t4'[ss'/zs] ]]$.
We must show that $[[t3[ss/zs] ~> t5]]$ and $[[t4[ss/zs] ~> t6]]$;
expanding gives us that we must show
$[[t3[ss/zs] ~> t3'[ss'/zs] ]]$ and $[[t4[ss/zs] ~> t4'[ss'/zs] ]]$.
Both of these follow directly from the induction hypothesis, and
so we are done.
\item[Case \rul{R\_Match}:] It must be that:
\begin{itemize}
\item $[[t1 = case_k H ts ts' of alts]]$
\item $[[t2 = t4[ts''/zs'] ]]$ where $[[H zs' -> o.t3 \in alts]]$,
$[[t3 ~> t4]]$, $[[ts' ~> ts'']]$, and no other alternative matches.
\end{itemize}
We must show that
$[[case_k[ss/zs] ts[ss/zs] ts'[ss/zs] of alts[ss/zs] ~> t4[ts''/zs'][ss'/zs] ]]$.
Proceeding by \rul{R\_Match}, the left-hand side steps to
$[[t5[ts'''/zs'] ]]$ where $[[t3[ss/zs] ~> t5]]$ and $[[ts'[ss/zs] ~> ts''']]$,
and we get to choose $[[t5]]$ and $[[ts''']]$.
We must show that $[[t5[ts'''/zs'] = t4[ts''/zs'][ss'/zs] ]]$.
Reorder substitutions to get
$[[t4[ts''/zs'][ss'/zs] = t4[ss'/zs][ts''[ss'/zs]/zs'] ]]$,
noting that $[[zs' # ts'']]$ by the Barendregt convention.
Choose $[[t5 = t4[ss'/zs] ]]$ and $[[ts''' = ts''[ss'/zs] ]]$.
We must show that $[[t3[ss/zs] ~> t4[ss'/zs] ]]$ and
$[[ts'[ss/zs] ~> ts''[ss'/zs] ]]$. Both of these follow from the
induction hypothesis, and so we are done.
\item[Case \rul{R\_Unroll}:] It must be that:
\begin{itemize}
\item $[[t1 = fix (\a:rel k1.t3)]]$
\item $[[t2 = t4[fix (\a:rel k2.t4)/a] ]]$ where $[[k1 ~> k2]]$ and
$[[t3 ~> t4]]$.
\end{itemize}
We must show that
$[[fix (\a:rel k1[ss/zs].t3[ss/zs]) ~> t4[fix (\a:rel k2.t4)/a][ss'/zs] ]]$.
Proceeding by \rul{R\_Unroll}, the left-hand side steps to
$[[t5[fix (\a:rel k3.t5)/a] ]]$ where $[[t3[ss/zs] ~> t5]]$
and $[[k1[ss/zs] ~> k3]]$.
We must show that
$[[t5[fix (\a:rel k3.t5)/a] = t4[fix (\a:rel k2.t4)/a][ss'/zs] ]]$.
Reorder substitutions on the right to get
$[[t4[fix (\a:rel k2.t4)/a][ss'/zs] = t4[ss'/zs][fix (\a:rel k2[ss'/zs].t4[ss'/zs])/a] ]]$, where $[[a # ss']]$ by the Barendregt convention.
Choose $[[t5 = t4[ss'/zs] ]]$ and $[[k3 = k2[ss'/zs] ]]$.
It remains only to show that $[[t3[ss/zs] ~> t4[ss'/zs] ]]$
and $[[k1[ss/zs] ~> k2[ss'/zs] ]]$, both of which follow from the
induction hypothesis. We are done.
\end{description}
\end{proof}

\begin{lemma}[Application reduction]
\label{lem:app-red}
If $[[H ts ~> s]]$, then $[[s = H ts']]$ where, $[[ts ~> ts']]$.
\end{lemma}

\begin{proof}
Straightforward induction on the structure of $[[s0 = H ts]]$.
\end{proof}

\begin{lemma}[Local diamond]
\label{lem:local-diamond}
Let $[[ti]]$ denote an erased type.
If $[[t0 ~> t1]]$ and $[[t0 ~> t2]]$, then there exists $[[t3]]$ such
that $[[t1 ~> t3]]$ and $[[t2 ~> t3]]$.
\end{lemma}

\begin{proof}
By induction on the structure of $[[t0]]$ followed by case analysis
on the reduction of $[[t0]]$. We assume throughout that all types
have had their coercions erased.

\begin{description}
\item[Case $[[t0 = a]]$:] $[[t1]] = [[t2]] = [[t3]] = [[a]]$.
\item[Case $[[t0 = H]]$:] $[[t1]] = [[t2]] = [[t3]] = [[H]]$.
\item[Case $[[t0 = s1 s2]]$:] We now have several cases:
\begin{description}
\item[Case \rul{R\_App}/\rul{R\_App}:] By induction.
\item[Case \rul{R\_App}/\rul{R\_Beta}:] It must be that:
\begin{itemize}
\item
$[[t0 = (\a:rel k1. s3) s4]]$
\item $[[t1 = (\a:rel k2. s5) s6]]$, where
$[[k1 ~> k2]]$, $[[s3 ~> s5]]$, and $[[s4 ~> s6]]$, and
\item $[[t2 = s3[s4/a] ]]$.
\end{itemize}
Choose $[[t3 = s5[s6/a] ]]$. We must show $[[t1 ~> t3]]$
and $[[t2 ~> t3]]$. The first is by \rul{R\_Beta}.
The second is by \pref{lem:red-subst-par}.
\item[Case \rul{R\_Beta}/\rul{R\_Beta}:] 
It must be that:
\begin{itemize}
\item $[[t0 = (\a:rel k.s3) s4]]$
\item $[[t1 = s3'[s4'/a] ]]$, where $[[s3 ~> s3']]$ and $[[s4 ~> s4']]$
\item $[[t2 = s3''[s4''/a] ]]$, where $[[s3 ~> s3'']]$ and $[[s4 ~> s4'']]$.
\end{itemize}
Using the induction hypothesis, we can get $[[s5]]$ and $[[s6]]$ such that
\begin{itemize}
\item $[[s3' ~> s5]]$
\item $[[s3'' ~> s5]]$
\item $[[s4' ~> s6]]$
\item $[[s4'' ~> s6]]$.
\end{itemize}
Choose $[[t3 = s5[s6/a] ]]$. We must show $[[s3'[s4'/a] ~> s5[s6/a] ]]$
and $[[s3''[s4''/a] ~> s5[s6/a] ]]$. Both of these follow from
\pref{lem:red-subst-par}.
\end{description}
\item[Case $[[t0 = PI d. s0]]$:] By induction.
\item[Case $[[t0 = o]]$:] $[[t1]] = [[t2]] = [[t3]] = [[o]]$.
\item[Case $[[t0 = case_k s0 of alts]]$:]
We now have several cases:
\begin{description}
\item[Case \rul{R\_Case}/\rul{R\_Case}:] By induction.
\item[Case \rul{R\_Case}/\rul{R\_Match}:] It must be that:
\begin{itemize}
\item $[[t0 = case_k H ts ss of alts]]$
\item $[[t1 = case_k' H ts' ss' of alts']]$
where $[[k ~> k']]$, $[[ts ~> ts']]$, $[[ss ~> ss']]$, and $[[alts ~> alts']]$
\item $[[t2 = s0'[ss''/zs] ]]$, where $[[alti = H zs -> o. s0]]$,
no other alternative matches $[[H]]$,
$[[s0 ~> s0']]$, and $[[ss ~> ss'']]$.
\end{itemize}
Using the induction hypothesis, we can get $[[ss''']]$ such that
$[[ss' ~> ss''']]$ and $[[ss'' ~> ss''']]$. Let $[[alti' = H zs -> o. s0'']]$.
We thus have $[[s0 ~> s0']]$ and $[[s0 ~> s0'']]$. The induction hypothesis
gives us $[[s0''']]$ such that $[[s0' ~> s0''']]$ and $[[s0'' ~> s0''']]$.
Choose $[[t3 = s0'''[ss'''/zs] ]]$. We must show both $[[t1 ~> t3]]$
and $[[t2 ~> t3]]$. The first is by \rul{R\_Match}. The second is by
\pref{lem:red-subst-par}.
\item[Case \rul{R\_Match}/\rul{R\_Match}:] It must be that:
\begin{itemize}
\item $[[t0 = case_k H ts ss of alts]]$
\item $[[alti = H zs -> o. k1]]$ where no other alternative matches $[[H]]$
\item $[[t1 = k1'[ss'/zs] ]]$ where $[[k1 ~> k1']]$ and $[[ss ~> ss']]$.
\item $[[t2 = k1''[ss''/zs] ]]$ where $[[k1 ~> k1'']]$ and $[[ss ~> ss'']]$.
\end{itemize}
The induction hypothesis gives us $[[k1''']]$ and $[[ss''']]$ such that:
\begin{itemize}
\item $[[k1' ~> k1''']]$
\item $[[k1'' ~> k1''']]$
\item $[[ss' ~> ss''']]$
\item $[[ss'' ~> ss''']]$
\end{itemize}
Choose $[[t3 = k1'''[ss'''/zs] ]]$ and we are done by \pref{lem:red-subst-par}.
\end{description}
\item[Case $[[t0 = \d0.s0]]$:] By induction.
\item[Case $[[t0 = fix s0]]$:] We have several cases:
\begin{description}
\item[Case \rul{R\_Fix}/\rul{R\_Fix}:] By induction.
\item[Case \rul{R\_Fix}/\rul{R\_Unroll}:] It must be that:
\begin{itemize}
\item $[[t0 = fix (\a:rel k1.s1)]]$
\item $[[t1 = fix (\a:rel k2.s2)]]$ where $[[k1 ~> k2]]$ and $[[s1 ~> s2]]$
\item $[[t2 = s3[fix (\a:rel k3.s3)/a] ]]$ where $[[k1 ~> k3]]$ and
$[[s1 ~> s3]]$
\end{itemize}
The induction hypothesis gives us $[[k4]]$ and $[[s4]]$ such that
$[[k2 ~> k4]]$, $[[k3 ~> k4]]$, $[[s2 ~> s4]]$, and $[[s3 ~> s4]]$.
Choose $[[t3 = s4[fix (\a:rel k4.s4)/a] ]]$. We must show
$[[t1 ~> t3]]$ and $[[t2 ~> t3]]$. The first is by \rul{R\_Unroll},
and the second is by \pref{lem:red-subst-par}.
\item[Case \rul{R\_Unroll}/\rul{R\_Unroll}:] It must be that:
\begin{itemize}
\item $[[t0 = fix (\a:rel k1.s1)]]$
\item $[[t1 = s2[fix (\a:rel k2.s2)/a] ]]$ where $[[k1 ~> k2]]$ and $[[s1 ~> s2]]$
\item $[[t2 = s3[fix (\a:rel k3.s3)/a] ]]$ where $[[k1 ~> k3]]$ and $[[s1 ~> s3]]$
\end{itemize}
The induction hypothesis gives us $[[k4]]$ and $[[s4]]$ such that
$[[k2 ~> k4]]$, $[[k3 ~> k4]]$, $[[s2 ~> s4]]$, and $[[s3 ~> s4]]$.
Choose $[[t3 = s4[fix (\a:rel k4.s4)/a] ]]$ and we are done
by \pref{lem:red-subst-par}.
\end{description}
\end{description}
\end{proof}

\begin{lemma}[Confluence]
\label{lem:confluence}
Let $[[ti]]$ denote an erased type.
If $[[t1 ~>* t2]]$ and $[[t1 ~>* t3]]$, then there exists
$[[t4]]$ such that $[[t2 ~>* t4]]$ and $[[t3 ~>* t4]]$.
\end{lemma}

\begin{proof}
Consequence of \pref{lem:local-diamond}.
\end{proof}

\begin{lemma}[Completeness of type reduction]
\label{lem:complete-red}
If $[[G]]$ contains no coercion bindings and
$[[S;G |-co g : t1 ~ t2]]$, then there exists some
erased type $[[ee]]$ such that $[[|t1| ~>* ee]]$ and
$[[|t2| ~>* ee]]$.
\end{lemma}

\begin{proof}
By induction on $[[S;G |-co g : t1 ~ t2]]$.

\begin{description}
\item[Case \rul{Co\_Var}:] Impossible.
\item[Case \rul{Co\_Refl}:] Choose $[[ee = |t1|]]$ and we are done.
\item[Case \rul{Co\_Sym}:] By induction.
\item[Case \rul{Co\_Trans}:] Use the metavariable names from the rule:
\[
\ottdruleCoXXTrans{}
\]
The induction hypothesis gives us $[[ee1]]$ such that $[[|t1| ~>* ee1]]$
and $[[|t2| ~>* ee1]]$. It also gives us $[[ee2]]$ such that $[[|t2| ~>* ee2]]$
and $[[|t3| ~>* ee2]]$. \pref{lem:confluence} gives us $[[ee3]]$ such that
$[[ee1 ~>* ee3]]$ and $[[ee2 ~>* ee3]]$. Thus, $[[ee3]]$ is a common reduct
of $[[|t1|]]$ and $[[|t3|]]$ as desired.
\item[Case \rul{Co\_Coherence}:] We know that $[[|t1| = |t2|]]$ and thus
either can be the common reduct.
\item[Case \rul{Co\_Pi}:] 
\end{proof}

\begin{lemma}[Consistency]
If $[[G]]$ contains no coercion bindings and $[[S;G |-co g : t1 ~ t2]]$,
then $[[t1 ! t2]]$.
\end{lemma}

\begin{proof}
By induction on $[[S;G |-co g : t1 ~ t2]]$.
\begin{description}
\item[Case \rul{Co\_Var}:] Impossible.
\item[Case \rul{Co\_Refl}:] By \pref{lem:cons-refl}.
\item[Case \rul{Co\_Sym}:] By the induction hypothesis and \pref{lem:cons-sym}.
\item[Case \rul{Co\_Trans}:] TODO
\end{description}
\end{proof}

\section{Preservation}

\begin{lemma}[Preservation]
\label{lem:preservation}
If $[[S;G |-ty t : k]]$ and $[[S;G |-s t --> t']]$, then
$[[S;G |-ty t' : k]]$.
\end{lemma}

\begin{proof}[unfinished]
By induction on the size of the typing derivation.

\begin{description}
\item[Case \rul{Ty\_Var}]: Impossible.
\item[Case \rul{Ty\_Con}]: Impossible.
\item[Case \rul{Ty\_AppRel}]: We have several cases to consider.
\begin{description}
  \item[Case \rul{S\_Beta}]: By \pref{lem:ty-subst}.
  \item[Case \rul{S\_App\_Cong}]: By the induction hypothesis.
  \item[Case \rul{S\_Push}]: 
\end{description}
\end{description}
\end{proof}
