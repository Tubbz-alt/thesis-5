%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Inference  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

metavar au {{ tex \alpha }}, bu {{ tex \beta }} ::=
metavar cu {{ tex \iota }} ::=

grammar

aus {{ tex \overline{\alpha} }}, bus {{ tex \overline{\beta} }}
  :: 'UnifVars_' ::=
| au                        ::   :: One
| aus1 , .... , ausi        ::   :: Many
| nil                       :: M :: Nil

zu {{ tex \zeta }} :: 'ZU_' ::=
| au              ::   :: Ty
| cu              ::   :: Co

zus {{ tex \overline{\zeta} }} :: 'ZUs_' ::=
| zu                      ::   :: One
| zus1 , .... , zusi      ::   :: Many
| nil                     :: M :: Nil
| dom ( P )               :: M :: dom_ctx
  {{ tex [[dom]] ( [[P]] ) }}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Zonkers  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

zmap :: 'ZonkMap_' ::=
| forall zs . t / au           ::   :: Ty
| forall zs . g / cu           ::   :: Co

Z {{ tex \Theta }} :: 'Zonker_' ::=
| zmap             ::   :: One
| Z1 , .... , Zi   ::   :: Many
| nil              :: M :: Nil

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Contexts  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% A context containing only unification variables
unif_bnd, u :: 'IUnifBnd_' ::=
| au : forall D . k    ::   :: Ty
| au : forall {} . k   :: M :: TyNoFA
  {{ tex [[au]] : [[k]] }}
| cu : forall D . phi  ::   :: Co
| cu : forall {} . phi :: M :: CoNoFA
  {{ tex [[cu]] : [[phi]] }}

O {{ tex \Omega }}, Os {{ tex \overline{\Omega} }} :: 'IUnifCtx_' ::=
| unif_bnd              ::   :: One
| O1 , .... , Oi        ::   :: Many
| nil                   :: M :: Nil
% | aus : D               :: M :: TelBind
%   {{ tex [[aus]]{:}[[D]] }}
| aus : forall {}. ts   :: M :: KsBind
   {{ tex [[aus]]{:}[[ts]] }}
| ( O )                :: M :: Parens
| O [ theta ]          :: M :: Subst
| O [ Z ]              :: M :: Zonk
| forall D . O         :: M :: Forall

P {{ tex \Psi }} :: 'ICtx_' ::=
| d                  ::   :: Binder
| O                  ::   :: UnifBinders
| P1 , .... , Pi     ::   :: Many
| nil                :: M :: Nil
| G                  :: M :: PlainCtx
| Rel ( P )          :: M :: Reset
  {{ tex [[Rel]]([[P]]) }}
| P [ theta ]        :: M :: Subst

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Judgments  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

J {{ tex \mathcal{J} }} :: 'Judg_' ::=
| J [ theta ]            :: M :: Subst
| J [ Z ]                :: M :: Zonk

ijudg :: 'IJudg_' ::=
| S ; P |=prop phi                    ::   :: Prop
  {{ tex [[S]] ; [[P]] [[|=prop]] [[phi]] \ok }}
| S ; P |=vec ps : P2                 ::   :: Vec
| S ; P ; s ; t |=alt alt : k         ::   :: Alt
  {{ tex [[S]];[[P]];[[s]] [[|=alt]]^{\!\!\!\raisebox{.1ex}{$\scriptstyle [[t]]$} } [[alt]] : [[k]] }}
| S ; P |= J                          ::   :: J
