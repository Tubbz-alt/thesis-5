%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Inference  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

metavar au {{ tex \alpha }}, bu {{ tex \beta }} ::=
metavar cu {{ tex \iota }} ::=

grammar

aus {{ tex \overline{\alpha} }}, bus {{ tex \overline{\beta} }}
  :: 'UnifVars_' ::=
| au                        ::   :: One
| aus1 , .... , ausi        ::   :: Many
| nil                       :: M :: Nil

zu {{ tex \zeta }} :: 'ZU_' ::=
| au              ::   :: Ty
| cu              ::   :: Co

zus {{ tex \overline{\zeta} }} :: 'ZUs_' ::=
| zu                      ::   :: One
| zus1 , .... , zusi      ::   :: Many
| nil                     :: M :: Nil
| dom ( O )               :: M :: dom_ctx
  {{ tex [[dom]] ( [[O]] ) }}
| dom ( Z )               :: M :: dom_Z
  {{ tex [[dom]] ( [[Z]] ) }}
| dom ( X )               :: M :: dom_X
  {{ tex [[dom]] ( [[X]] ) }}
| aus                     :: M :: aus
| zus1 \union zus2        :: M :: union


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Zonkers  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

zmap :: 'ZonkMap_' ::=
| forall zs . t / au           ::   :: Ty
| forall {}. t / au            :: M :: TyBlank
  {{ tex [[t]]/[[au]] }}
| forall zs . g / cu           ::   :: Co
| forall {}. g / cu            :: M :: CoBlank
  {{ tex [[g]]/[[cu]] }}

Z {{ tex \Theta }} :: 'Zonker_' ::=
| zmap             ::   :: One
| Z1 , .... , Zi   ::   :: Many
| nil              :: M :: Nil
| as / aus         :: M :: ZonkToSkolem

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Generalizers  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

xmap :: 'XMap_' ::=
| zu |-> ps              ::   :: Map
  {{ tex [[zu]] \mapsto [[ps]] }}
| ( xmap )               :: M :: Parens

X {{ tex \xi }} :: 'X_' ::=
| xmap                  ::   :: One
| X1 , .... , Xi        ::   :: Many
| nil                   :: M :: Nil

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Contexts  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% A context containing only unification variables
unif_bnd, u :: 'IUnifBnd_' ::=
| au colon forall D . k    ::   :: Ty
| au colon forall {} . k   :: M :: TyNoFA
  {{ tex [[au]] [[colon]] [[k]] }}
| cu : forall D . phi  ::   :: Co
| cu : forall {} . phi :: M :: CoNoFA
  {{ tex [[cu]] {:} [[phi]] }}

O {{ tex \Omega }}, Os {{ tex \overline{\Omega} }} :: 'IUnifCtx_' ::=
| unif_bnd              ::   :: One
| O1 , .... , Oi        ::   :: Many
| nil                   :: M :: Nil
% | aus : D               :: M :: TelBind
%   {{ tex [[aus]]{:}[[D]] }}
| aus colon forall {}. ts   :: M :: KsBind
   {{ tex [[aus]] [[colon]] [[ts]] }}
| ( O )                :: M :: Parens
| O [ theta ]          :: M :: Subst
| O [ Z ]              :: M :: Zonk
| O [ X ]              :: M :: Gen
| Rel ( O )            :: M :: Rel
  {{ tex [[Rel]]([[O]]) }}

P {{ tex \Psi }} :: 'ICtx_' ::=
| d                  ::   :: Binder
| O                  ::   :: UnifBinders
| P1 , .... , Pi     ::   :: Many
| nil                :: M :: Nil
| G                  :: M :: PlainCtx
| Rel ( P )          :: M :: Reset
  {{ tex [[Rel]]([[P]]) }}
| P [ theta ]        :: M :: Subst
| P [ X ]            :: M :: Gen

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  Judgments  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

J {{ tex \mathcal{J} }} :: 'Judg_' ::=
| J [ theta ]            :: M :: Subst
| J [ Z ]                :: M :: Zonk
| J [ X ]                :: M :: Gen

ijudg :: 'IJudg_' ::=
| S ; P |=prop phi                    ::   :: Prop
  {{ tex [[S]] ; [[P]] [[|=prop]] [[phi]] \ok }}
| S ; P |=vec ps : P2                 ::   :: Vec
| S ; P ; s ; t |=alt alt : k         ::   :: Alt
  {{ tex [[S]];[[P]];[[s]] [[|=alt]]^{\!\!\!\raisebox{.1ex}{$\scriptstyle [[t]]$} } [[alt]] : [[k]] }}
| S ; P |= J                          ::   :: J
| S ; P |=subst theta : D             ::   :: Subst
| k1 <= k2 ~> t                       ::   :: Sub
| S ; G |- J                          ::   :: PicoJ

